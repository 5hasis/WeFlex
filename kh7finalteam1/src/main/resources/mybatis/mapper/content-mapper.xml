<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
<mapper namespace="content">

	<!-- contentNo 뽑기 (시퀀스번호 미리 추출) -->
	 <select id="sequence" resultType="int">
		select content_seq.nextval from dual
	</select>
	 
	 <!-- 컨텐츠 테이블 등록 -->
	<insert id="insert" parameterType="ContentDto">
		insert into content values(
		#{contentNo} , #{contentName}, #{contentInfo}, #{contentLimit},  #{contentSeries}, 
		#{contentRelease}, #{contentLogo}, 0, 0, #{contentThumbnail}, #{contentType}, #{contentTrailer}, sysdate
		)
	</insert>
	
	<!-- 단일 조회 -->
	<select id="get" parameterType="int" resultType="ContentDto">
		select * from content where content_no = #{contentNo}
	</select>
	
	<!-- 컨텐츠 리스트 -->
	<select id="list" resultType="ContentDto">
		select * from content order by content_no desc
	</select>
	
	<!-- 컨텐츠 삭제 -->
	<delete id="delete" parameterType="int">
		delete from content where content_no=#{contentNo}
	</delete>
	 
	<!-- 컨텐츠 상세정보 수정 -->
	<update id="edit" parameterType="ContentDto">
		update content set 
			content_name=#{contentName}, content_info=#{contentInfo}, content_limit=#{contentLimit}, 
			content_type=#{contentType},  content_release=#{contentRelease},
			content_logo=#{contentLogo}, content_thumbnail=#{contentThumbnail},
			content_trailer=#{contentTrailer}
		where content_no=#{contentNo}
	</update> 
		 
	<select id="getGenreSlider" parameterType="map" resultType="ContentDto">
		select 
		    CT.*
		from 
		    content CT
		        inner join content_genre CTGR on CT.content_no = CTGR.content_no
		        inner join genre GR on CTGR.genre_no = GR.genre_no
		where GR.genre_name = #{keyword} and CT.content_type = #{contentType}
	</select>
	
	<select id="getGenreContentList" parameterType="map" resultType="ContentListVO">
		select 
		    CT.content_no, CT.content_thumbnail
		from 
		    content CT
		        inner join content_genre CTGR on CT.content_no = CTGR.content_no
		        inner join genre GR on CTGR.genre_no = GR.genre_no
		where GR.genre_name = #{keyword} and CT.content_type = #{contentType}
	</select>
	
	<select id="getFeatureContentList" parameterType="map" resultType="ContentListVO">
		select 
		    CT.content_no, CT.content_thumbnail
		from 
		    content CT
		        inner join content_feature CTFT on CT.content_no = CTFT.content_no
		        inner join program_feature FT on CTFT.feature_no = FT.feature_no
		where FT.feature_name = #{keyword} and CT.content_type = #{contentType}
	</select>
	
	<resultMap type="HoverModalVO" id="hoverModal">
<!-- 		ContentDto 항목을 설정 -->
  		<result column="content_no" property="contentNo"/>  
		
		<!-- GenreDto 항목을 조회하도록 구현 -->
		<collection property="genreList" javaType="java.util.List"
			ofType="GenreDto" column="content_no"
			select="getContentListSub"></collection>
					
	</resultMap>
	
	<!-- 메인 조회 구문(컨텐츠) -->
	<select id="getHoverModalVO" parameterType="int" resultMap="hoverModal">
		select 
		    CT.content_no, CT.content_trailer, CT.content_series, CT.content_limit
		from 
		    content CT		        
		where CT.content_no = #{contentNo}
	</select>
	
	<!-- 서브 조회 구문(장르) : 컨텐츠 번호로 조회 -->
	<select id="getContentListSub" parameterType="int" resultType="GenreDto">
		select gr.* from 
			content_genre cg inner join genre gr on cg.genre_no = gr.genre_no
			where cg.content_no = #{contentNo}
	</select>

	<!-- 이번달 컨텐츠 증가 수 -->
	<select id="month-contentCount" resultType="int">
		select count(*) from content
		where content_join between (TRUNC(SYSDATE,'MM')) and SYSDATE
	</select>
	
	<!-- 이번년도 컨텐츠 증가 수 -->
	<select id="year-contentCount" resultType="int">
		select count(*) from content
 		where content_join between (TRUNC(SYSDATE,'YYYY')) and SYSDATE
	</select>
	
	<select id="getSimilarContentVO" parameterType="map" resultType="SimilarContentVO">	
		select * from (
			select R.*, WL.client_no from
			    (
			    	<foreach collection="genreList" item="arr" separator="intersect">
			    	select content_no, content_thumbnail, content_limit, content_release, content_info, content_type 
			                from similar_view where genre_name = #{arr} and content_type = #{contentType}
			        </foreach>		        
			                    ) R
			    left outer join wishlist WL on WL.content_no = R.content_no
			    where (WL.client_no = #{clientNo} or WL.client_no is null) and not(R.content_no = #{contentNo})
			    order by R.content_no
	    )where ROWNUM &lt;= #{count}
	</select>
	
	<select id="getAllSimilarContentVO" parameterType="map" resultType="SimilarContentVO">	
	    select R.content_no, R.content_thumbnail, R.content_limit, R.content_release, R.content_info, R.content_type, R.content_likes, WL.client_no 
	        from content R
		        left outer join wishlist WL on R.content_no = WL.content_no
	        where R.content_type = #{contentType} and (WL.client_no = #{clientNo} or WL.client_no is null) and not(R.content_no = #{contentNo})
	        order by R.content_likes desc
	</select>
	
	<update id="updateContentViews" parameterType="int">
		UPDATE content SET content_views = content_views+1 WHERE content_no = #{contentNo}
	</update>
	
	<update id="increaseContentLikes" parameterType="int">
		UPDATE content SET content_likes = content_likes+1 WHERE content_no = #{contentNo}
	</update>
	
	<update id="decreaseContentLikes" parameterType="int">
		UPDATE content SET content_likes = content_likes-1 WHERE content_no = #{contentNo}
	</update>

	<!-- 티비프로그램(연작있는컨텐츠) 조회 -->
	
	
	<!-- 조건(문자열 위치) 검색(컨텐츠명) -->
	<select id="search" parameterType="string" resultType="ContentListVO">
		select * from content where instr(content_name, #{keyword}) > 0
	</select>
	
	<select id="tvProgram" resultType="ContentListVO">
		select content_no, content_thumbnail from content where content_series = 'Y'
	</select>
	
	<!-- 티비프로그램(연작있는컨텐츠) 장르 검색 조회  -->
	<select id="tvProgramSearch" resultType="ContentListVO">
		select C.content_no, C.content_thumbnail from content C 
		inner join content_genre CG on C.content_no = CG.content_no 
		where CG.genre_no=#{genreNo} and C.content_series='Y'
	</select>
	
	<!-- 영화(연작없는컨텐츠) 조회 -->
	<select id="movie" resultType="ContentListVO">
		select content_no, content_thumbnail from content where content_series = 'N'
	</select>
	
	<!-- 영화(연작없는컨텐츠) 장르 검색 조회  -->
	<select id="movieProgramSearch" resultType="ContentListVO">
		select C.content_no, C.content_thumbnail from content C 
		inner join content_genre CG on C.content_no = CG.content_no 
		where CG.genre_no=#{genreNo} and C.content_series='N'
	</select>

</mapper>